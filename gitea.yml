# 
# ref: 
#   https://github.com/go-gitea/gitea/blob/v1.13.0-dev/contrib/k8s/gitea.yml
#   https://kubernetes.io/docs/tasks/manage-kubernetes-objects/kustomization/
#
####### </ Jeffery Bagirimvano >

###################################################
# Namespace Gitea
###################################################
apiVersion: v1
kind: Namespace
metadata:
  name: gitea

---
###############################
# Gitea PVC
###############################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitea-pvc
  namespace: gitea
spec:
  accessModes:
    - ReadWriteOnce
  # storageClassName: microk8s-hostpath
  resources:
    requests:
      storage: 5Gi

###############################
# Deplyoment Gitea
###############################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitea
  namespace: gitea
  labels:
    app: gitea
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitea
  template:
    metadata:
      labels:
        app: gitea
    spec:
      containers:
        - name: gitea
          image: gitea/gitea:latest
          imagePullPolicy: Always
          ports:
            - name: gitea
              containerPort: 3000
            - name: gitea-ssh
              containerPort: 22
          volumeMounts:
            - name: gitea-data
              mountPath: /data  
      volumes:
        - name: gitea-data
          persistentVolumeClaim:
            claimName: gitea-pvc

---
###############################
# Service
###############################
apiVersion: v1
kind: Service
metadata:
  name: gitea-service
  namespace: gitea
spec:
  selector:
    app: gitea
  ports:
    - name: gitea-http
      port: 3000
      targetPort: 3000

---
# Using node-port mode
# This mainly open a specific TCP port for SSH usage on each host,
# so you can use a proxy layer to handle it(e.g. slb, nginx)
apiVersion: v1
kind: Service
metadata:
  name: gitea-ssh
  namespace: gitea
  labels:
    app: gitea-ssh
spec:
  selector:
    app: gitea
  ports:
    - name: gitea-ssh
      port: 22
      targetPort: 22
      nodePort: 30022
  type: NodePort

---
###################################################
# Ingress
###################################################
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: gitea
  namespace: gitea
  # annotations:
  #   nginx.ingress.kubernetes.io/rewrite-target: /$1
  #   cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  # tls:
  #   - hosts:
  #     - your-gitea-host.com
  #     secretName: gitea-tls
  rules:
    - host: your-gitea-host.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gitea-service
                port:
                  number: 3000
